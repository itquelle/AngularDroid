/// <reference path="../../typings/globals/jquery/index.d.ts" />
var stringRequest;
var TextView;
var Button;
var request = {
    Method: {
        GET: "GET",
        POST: "POST"
    }
};
var findViewById = /** @class */ (function () {
    function findViewById(id) {
        this.view = jQuery("#" + id);
    }
    findViewById.prototype.setText = function (text) {
        var _this = this;
        jQuery(document).ready(function () {
            _this.view.text(text);
        });
    };
    return findViewById;
}());
var findViewByClass = /** @class */ (function () {
    function findViewByClass(id) {
        this.view = jQuery("." + id);
    }
    findViewByClass.prototype.setText = function (text) {
        var _this = this;
        jQuery(document).ready(function () {
            _this.view.text(text);
        });
    };
    return findViewByClass;
}());
var StringRequest = /** @class */ (function () {
    function StringRequest(requestMethod, requestUrl, options, response) {
        if (requestMethod === void 0) { requestMethod = request.Method.GET; }
        jQuery.ajax({
            type: requestMethod,
            url: requestUrl,
            data: options,
            dataType: "json",
        }).done(function (_response) {
            response(_response);
        }).fail(function () {
            throw new Error("Konnte nicht geladen werden");
        });
    }
    return StringRequest;
}());
var JSONObject = /** @class */ (function () {
    function JSONObject(json) {
        try {
            this.jsonString = JSON.parse(json);
        }
        catch (e) {
            throw new Error("JSON kann nicht geparst werden.");
        }
    }
    JSONObject.prototype.getString = function (name) {
        return this.jsonString[name];
    };
    return JSONObject;
}());
